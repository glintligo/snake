module keycheck(
    input wire clk, rst_n,
    input wire key,
    output reg key_v
    );

    // 20ms parameter
    localparam TIME_20MS = 1_000_000;
//    localparam TIME_20MS = 1_000;       // just for test

    // variable
    reg [20:0] cnt;
    reg key_cnt;
    
    // debounce time passed, refresh key state
    always @(posedge clk or negedge rst_n) begin
        if(rst_n == 0)
            key_v <= 0;
        else if(cnt == TIME_20MS - 1)
            key_v <= key;
    end

    // while in debounce state, count, otherwise 0
    always @(posedge clk or negedge rst_n) begin
        if(rst_n == 0)
            cnt <= 0;
        else if(key_cnt)
            cnt <= cnt + 1'b1;
        else
            cnt <= 0; 
    end
     
     // 
     always @(posedge clk or negedge rst_n) begin
            if(rst_n == 0)
                key_cnt <= 0;
            else if(key_cnt == 0 && key != key_v)
                key_cnt <= 1;
            else if(cnt == TIME_20MS - 1)
                key_cnt <= 0;
     end
endmodule